name: benchmark e2e tests

on:
  workflow_dispatch:
    inputs:
      spiced_commit:
        description: 'spiced build commit'
        required: false
        type: string
      spicepod_path:
        description: 'The spicepod file to test with'
        required: true
        type: string
      query_set:
        description: 'Query set'
        required: true
        default: 'tpch'
        type: choice
        options:
          - 'tpch'
          - 'tpcds'
          - 'clickbench'
      query_overrides:
        description: 'Query overrides'
        required: false
        type: choice
        default: ''
        options:
          - ''
          - 'sqlite'
          - 'postgresql'
          - 'mysql'
          - 'dremio'
          - 'odbc-athena'
          - 'duckdb'
          - 'snowflake'
          - 'iceberg-sf1'
      ready_wait:
        description: 'How long (in seconds) to wait for spiced to start'
        required: true
        default: '30'
        type: string
      runner_type:
        description: 'Runner type'
        required: true
        default: 'spiceai-runners'
        type: choice
        options:
          - 'spiceai-runners'
          - 'spiceai-large-runners'

jobs:
  run-bench:
    name: Run benchmark e2e tests
    runs-on: ${{ github.event.inputs.runner_type }}
    timeout-minutes: 600
    steps:
      - uses: actions/checkout@v4

      - name: Install MinIO
        run: |
          sudo apt update && sudo apt install wget -y
          sudo wget https://dl.min.io/client/mc/release/linux-amd64/mc -O /usr/local/bin/mc
          sudo chmod +x /usr/local/bin/mc
          mc alias set spice-minio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}

      - name: Get latest trunk commit
        if: ${{ !github.event.inputs.spiced_commit }}
        run: |
          git fetch origin
          echo "SPICED_COMMIT=$(git rev-parse origin/trunk)" >> $GITHUB_ENV

      - name: Set SPICED_COMMIT from workflow input
        if: ${{ github.event.inputs.spiced_commit }}
        run: |
          echo "SPICED_COMMIT=${{ github.event.inputs.spiced_commit }}" >> $GITHUB_ENV

      - name: Download spiced from MinIO
        run: |
          mc cp spice-minio/artifacts/spiced/linux-x86_64/$SPICED_COMMIT/spiced_models_linux_x86_64.tar.gz spiced_models_linux_x86_64.tar.gz
          tar -xzf spiced_models_linux_x86_64.tar.gz
          sudo cp ./spiced /usr/local/bin/spiced

      - name: Build Testoperator
        uses: ./.github/actions/build-testoperator

      - name: Setup Testoperator
        uses: ./.github/actions/setup-testoperator-data
        with:
          query_set: ${{ github.event.inputs.query_set }}

      - name: Setup MySQL
        run: |
          if [[ ${{ github.event.inputs.query_set }} == "tpcds" ]]; then
            echo "MYSQL_DB=tpcds_sf1" >> $GITHUB_ENV
          elif [[ ${{ github.event.inputs.query_set }} == "tpch" ]]; then
            echo "MYSQL_DB=tpch_sf1" >> $GITHUB_ENV
          fi

      - name: Run the benchmark test
        if: ${{ github.event.inputs.query_overrides == '' }}
        run: |
          rm -rf .spice/data
          testoperator run bench \
            -s /usr/local/bin/spiced \
            -p ${{ github.event.inputs.spicepod_path }} \
            -d /opt/spiced/data \
            --query-set ${{ github.event.inputs.query_set }} \
            --ready-wait ${{ github.event.inputs.ready_wait }} \
            --disable-progress-bars
        env:
          S3_ENDPOINT: ${{ secrets.CLICKBENCH_S3_ENDPOINT}}
          S3_KEY: ${{ secrets.CLICKBENCH_S3_KEY}}
          S3_SECRET: ${{ secrets.CLICKBENCH_S3_SECRET}}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          AWS_DATABRICKS_DELTA_ACCESS_KEY_ID: ${{ secrets.AWS_DATABRICKS_DELTA_ACCESS_KEY_ID }}
          AWS_DATABRICKS_DELTA_SECRET_ACCESS_KEY: ${{ secrets.AWS_DATABRICKS_DELTA_SECRET_ACCESS_KEY }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_TCP_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Run the benchmark test (with overrides)
        if: ${{ github.event.inputs.query_overrides != '' }}
        run: |
          rm -rf .spice/data
          testoperator run bench -s /usr/local/bin/spiced -p ${{ github.event.inputs.spicepod_path }} -d /opt/spiced/data --query-set ${{ github.event.inputs.query_set }} --query-overrides ${{ github.event.inputs.query_overrides }} --ready-wait ${{ github.event.inputs.ready_wait }} --disable-progress-bars
        env:
          S3_ENDPOINT: ${{ secrets.CLICKBENCH_S3_ENDPOINT}}
          S3_KEY: ${{ secrets.CLICKBENCH_S3_KEY}}
          S3_SECRET: ${{ secrets.CLICKBENCH_S3_SECRET}}
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          AWS_DATABRICKS_DELTA_ACCESS_KEY_ID: ${{ secrets.AWS_DATABRICKS_DELTA_ACCESS_KEY_ID }}
          AWS_DATABRICKS_DELTA_SECRET_ACCESS_KEY: ${{ secrets.AWS_DATABRICKS_DELTA_SECRET_ACCESS_KEY }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_TCP_PORT: 3306
          MYSQL_USER: root
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}